{"subreddit":{"display_name":"lua"},"subreddit_loc":"принимать","selftext":"Я надеюсь, что смогу объяснить это правильно. Я работаю над [реализацией класса]  (https://github.com/megagrump/moonclass/blob/master/moonclass.moon) , которая позволяет расширять классы, написанные на moonscript из кода Lua и наоборот.\n\nКак это в настоящее время используется:\n\n    local MyClass = {\n        new = function (...) ... end,\n        foo = function (...) ... end,\n    }\n\n    MyClass = class ('MyClass', MyClass)\n\nили\n\n    local MyClass = class ('MyClass', {\n        новый = функция (...) ... конец\n        foo = function (...) ... end,\n    })\n\n\n\n\nМне не нравится этот синтаксис. Я бы предпочел, чтобы классы определялись так:\n\n    local MyClass = class ('MyClass')\n\n    функция MyClass: новый (...) ... конец\n    функция MyClass: foo (...) ... end\n\nЭтот синтаксис не работает, потому что члены класса в moonscript хранятся в таблице `__base`, а не в таблице` __class`. Но моя функция `class` должна возвращать` __class`, поэтому функции-члены окажутся в `__class`, когда они должны быть в` __base`.\n\nПервые примеры синтаксиса являются бельмом на глазу и кажутся нелогичными. Мне бы очень хотелось, чтобы другой синтаксис работал, но я не думаю, что это возможно.\n\nЯ хотел бы услышать ваше мнение об этом.","title":"Moonscript классы в Lua","subreddit_name_prefixed":"r/lua","ups":7,"created":1553227293,"link_flair_background_color":"","id":"b3v8uw","author":{"name":"megagrump"},"permalink":"/r/lua/comments/b3v8uw/moonscript_classes_in_lua/","url":"https://www.reddit.com/r/lua/comments/b3v8uw/moonscript_classes_in_lua/","created_utc":1553198493}