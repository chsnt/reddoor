{"subreddit":{"display_name":"lua"},"subreddit_loc":"принимать","selftext":"Недавно я наткнулся на несколько примеров сценариев lua со страницы [developer page]  (https://flashair-developers.com/en/documents/tutorials/lua/4/)  для FTP, но продолжил изучение некоторых сценариев на странице [this]  (https://cyclapse.com/ftp-upload-with-flashair/) , которая включает уже загруженные файлы быть пропущенным.\n\nМне нужно было объединить файл Settings.lua с реальным сценарием ftpupload.lua, чтобы заставить его работать по какой-то причине (изначально он имел их как отдельные файлы и включал в него: require («Настройки»)\n\nМой комбинированный код ниже. Это отлично подходит для первых 200-500 фотографий или 12-24 часов, но в конечном итоге карта будет постоянно загружать одну и ту же фотографию снова и снова. Я думаю, что это связано с тем, как он использует md5, чтобы проверить, был ли загружен файл?\n\nКто-нибудь с кучей знаний по написанию скриптов на языке lua знает, почему это может произойти? Ура!\n\n    - Настройки FTP -\n    local logfile = \"/FTPLog.txt\" - Где записать вывод на FA\n    local folder = \"/ DCIM\" - из какой папки загружать файлы\n    local server = \"192.168.1.220\" - IP-адрес FTP-сервера\n    local serverDir = \"HDD / Projects / FlashAir / 500D\" - путь к используемому FTP-серверу.\n    local user = \"user\" - имя пользователя FTP\n    local passwd = \"123456\" - пароль FTP\n    local delete_after_upload = false\n    \n    local ftpstring = \"ftp: //\" ..user .. \":\" ..passwd .. \"@\" ..server .. \"/\" ..serverDir .. \"/\"\n    local lockdir = \"/ uploaded /\" - требуется косая черта, а папка уже должна существовать\n    \n    функция существует (путь)\n        если lfs.attributes (путь), то\n            вернуть истину\n        еще\n            вернуть ложь\n        конец\n    конец\n    \n    функция is_uploaded (путь)\n        local hash = fa.hash (\"md5\", путь, \"\")\n        возврат существует (lockdir .. hash)\n    конец\n    \n    функция set_uploaded (путь)\n        local hash = fa.hash (\"md5\", путь, \"\")\n        local file = io.open (lockdir .. hash, \"w\")\n        Файл: закрыть ()\n    конец\n    \n    функция удаления (путь)\n        - Оба следующих метода приводят к потере / сохранению следующей фотографии.\n        fa.remove (путь)\n        - fa.request (\"http://127.0.0.1/upload.cgi?DEL=\" ..path)\n    конец\n    \n    функция upload_file (папка, файл)\n        локальный путь = папка .. \"/\" .. файл\n        - Откройте файл журнала\n        local outfile = io.open (logfile, \"a\")\n        outfile: запись (файл .. \"...\")\n        локальный ответ = fa.ftp (\"положить\", ftpstring..file, путь)\n    \n        - Проверьте, сработало ли это, и зарегистрируйте результат!\n        если ответ ~ = ноль, то\n            печать ( \"Успех!\")\n            outfile: write (\"Успех! \\ n\")\n            set_uploaded (путь)\n            если delete_after_upload == true тогда\n                распечатать (\"Удалить\" .. файл)\n                outfile: write (\"Удаление\" .. file .. \"\\ n\")\n                сон (1000)\n                удаление (путь)\n                сон (1000)\n            конец\n        еще\n            печать («Fail»)\n            outfile: write (\"Fail \\ n\")\n        конец\n        - Закройте наш файл журнала\n        выходной_файл: закрыть ()\n    конец\n    \n    функция walk_directory (папка)\n        - рекурсивно перебирать файловую систему\n        для файла в lfs.dir (папка) сделать\n            локальный путь = папка .. \"/\" .. файл\n            local attr = lfs.attributes (путь)\n            print (\"Найдено\" ..attr.mode .. \":\" .. путь)\n    \n            если attr.mode == \"файл\", то\n                если не is_uploaded (путь), то\n                    upload_file (папка, файл)\n                еще\n                    печать (путь .. \"ранее загруженный, пропуская\")\n                конец\n            elseif attr.mode == \"каталог\" тогда\n                печать («Ввод» .. путь)\n                walk_directory (путь)\n            конец\n        конец\n    конец\n    \n    - дождитесь подключения Wi-Fi\n    в то время как string.sub (fa.ReadStatusReg (), 13,13) ~ = \"a\" делают\n        печать (\"Wi-Fi не подключен. Ожидание ...\")\n        сон (1000)\n    конец\n    walk_directory (папка)\n\nЯ могу загрузить свой лог-файл, если это поможет, но, похоже, он не говорит мне ничего, кроме целой пачки файлов, в то время как некоторые удаются. Он всегда запускается нормально, только после того, как он работает некоторое время, он начинает зацикливаться на загрузке той же фотографии.\n\nPS Для тех, кто не знает, как работают эти карты, в основном у них есть файл CONFIG, который я настроил для запуска сценария lua всякий раз, когда что-то записывается на карту sd.\n\nРЕДАКТИРОВАТЬ: По какой-то причине отдельные сценарии сейчас работают вместе. Постараюсь, как задумано, и посмотрю, как я пойду ...\n\nРЕДАКТИРОВАТЬ 2: Ok, кажется, работает сейчас, но с некоторыми другими ошибками, я пытаюсь устранить: / В конце концов это вообще останавливается, как правило, в середине загрузки файла, и журнал становится поврежденным. Это также никогда не возобновляется, когда это делает это, что проблематично.","title":"SD-карта Toshiba Flashair с загрузкой по FTP для timelapse","subreddit_name_prefixed":"r/lua","ups":4,"created":1563294514,"link_flair_background_color":"","id":"cdub25","author":{"name":"GammaScorpii"},"permalink":"/r/lua/comments/cdub25/toshiba_flashair_sd_card_with_ftp_upload_for/","url":"https://www.reddit.com/r/lua/comments/cdub25/toshiba_flashair_sd_card_with_ftp_upload_for/","created_utc":1563265714}