{"subreddit":{"display_name":"Kotlin"},"subreddit_loc":"Котлин","selftext":"Привет, я хотел использовать шаблон Model View Presenter в некотором коде Android, я хотел сделать его максимально гибким, используя интерфейсы и универсальные шаблоны, потому что потенциально я буду использовать этот шаблон во все большем количестве мест в коде.\n\nЯ хочу, чтобы адаптер был тупым классом, используемым только для создания представления. Он делегирует большую часть логики докладчику. Я попытался сделать что-то вроде кода ниже, но он не компилируется из-за:\n\nНесоответствие типов.\n\nТребуется: В.Х.\n\nНайдено: DefaultViewHolder\n\nЯ отмечу место ошибки в коде.\n\nВторая проблема заключается в том, что создание адаптера изнутри презентатора приведет к тому, что докладчику будет представлена ​​конкретная реализация ViewHolder <T> (val адаптер = адаптер <Item / \\ * good \\ * /, DefaultViewHolder / \\ * bad \\ * />)\n\n    Элемент интерфейса {// не имеет значения}\n    \n    интерфейс ViewHolder <T: Item> {// не имеет значения}\n    \n    интерфейс Presenter <T: Item, VH: ViewHolder <T >> {val items: List <T> fun onBindViewHolder (держатель: VH, позиция: Int)}\n    \n    Класс DefaultViewHolder (val view: View): RecyclerView.ViewHolder (view), ViewHolder <Item>\n    \n    Адаптер класса <I, VH> (val Presenter: Presenter <I, VH>): RecyclerView.Adapter <VH> ()\n    где я: элемент, VH: ViewHolder <I>, VH: RecyclerView.ViewHolder {\n    \n    переопределить веселье onCreateViewHolder (родитель: ViewGroup, viewType: Int): VH {\n    val v = LayoutInflater.from (parent.context) .inflate (R.layout.abc \\ _action \\ _bar \\ _title \\ _item, parent, false)\n    вернуть DefaultViewHolder (v) <---------------------- ошибка\n    }\n    \n    переопределить веселье getItemCount (): Int {return Presenter.items.size}\n    \n    переопределить веселье onBindViewHolder (держатель: VH, позиция: Int) {Presenter.onBindViewHolder (держатель, позиция)}}\n\nЯ думаю об изменении Адаптера на, но также будут проблемы:\n\n    Адаптер класса <I, VH> (val Presenter: Presenter <I, VH>): RecyclerView.Adapter <RecyclerView.ViewHolder> ()\n    где я: Item, VH: ViewHolder <I> {\n    \n    переопределить веселье onCreateViewHolder (родитель: ViewGroup, viewType: Int): RecyclerView.ViewHolder {\n    val v = LayoutInflater.from (parent.context) .inflate (R.layout.abc \\ _action \\ _bar \\ _title \\ _item, parent, false)\n    вернуть DefaultViewHolder (v)\n    }\n    \n    переопределить веселье getItemCount (): Int {return Presenter.items.size}\n    \n    переопределить забаву onBindViewHolder (держатель: RecyclerView.ViewHolder, позиция: Int) {\n    if (holder is ????) {// <-------------------- как правильно привести его к ViewHolder <I>?\n        Presenter.onBindViewHolder (держатель, позиция)}\n    }\n    }\n\nЕсть ли способ сделать это правильно или мне нужно отказаться от дженериков.","title":"Kotlin на Android не может понять, как правильно использовать дженерики в конкретной ситуации.","subreddit_name_prefixed":"r/Kotlin","ups":8,"created":1553536176,"link_flair_background_color":"","id":"b58l1h","author":{"name":"Dussimm"},"permalink":"/r/Kotlin/comments/b58l1h/kotlin_on_android_cant_figure_out_how_to_properly/","url":"https://www.reddit.com/r/Kotlin/comments/b58l1h/kotlin_on_android_cant_figure_out_how_to_properly/","created_utc":1553507376}