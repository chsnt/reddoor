{"subreddit":{"display_name":"Kotlin"},"subreddit_loc":"Котлин","selftext":"Привет,\n\nЯ новичок в сопрограммах Kotlin и в настоящее время пытаюсь решить эту проблему: Моему приложению (веб-серверу) иногда требуется объединять большие файлы вместе. Пока я сделал это так:\n\nGlobalScope.launch {\ncombineFilesInsideDirectory (каталог)\n}\n\nОднако моя проблема заключается в том, что эта задача может случайно дублироваться - например, веб-запросы в многопоточной среде, где два обработчика запросов считают, что предварительные условия для выполнения задания выполнены, и оба инициируют задание.\n\nЧто я хотел бы сделать, так это как-то обернуть мою задачу в «Job» и проверить, содержит ли моя «очередь заданий» эту работу. Эта очередь заданий должна быть доступна и проверяться одновременно несколькими потоками.\n\nЯ кратко посетил документацию для сопрограмм в целом и класс Kotlin `Job`, но я все еще не уверен, где и как мне следует смоделировать эту очередь заданий.\n\nНаверное, я ищу что-то похожее на [huey]  (https://github.com/coleifer/huey)  (Python), но желательно без необходимости в очереди задач база данных (как `MiniHuey` в` huey`).\n\nЕсть ли способ легко добиться этого с сопрограммами Kotlin?","title":"Могу ли я обрабатывать и игнорировать дубликаты заданий с сопрограммами?","subreddit_name_prefixed":"r/Kotlin","ups":3,"created":1564603252,"link_flair_background_color":"","id":"ck7juc","author":{"name":"Devirichu"},"permalink":"/r/Kotlin/comments/ck7juc/can_i_handle_and_ignore_duplicate_jobs_with/","url":"https://www.reddit.com/r/Kotlin/comments/ck7juc/can_i_handle_and_ignore_duplicate_jobs_with/","created_utc":1564574452}