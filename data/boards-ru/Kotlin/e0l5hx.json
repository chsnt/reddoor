{"subreddit":{"display_name":"Kotlin"},"subreddit_loc":"Котлин","selftext":"Я ищу заменить C # в качестве основного языка. C # - хороший язык, и .NET как платформа становилась все лучше и лучше, но меня не устраивает направление разработки языка C #. Кажется, что они продолжают решать проблемы, добавляя новые языковые функции. В этой связи я бы сгруппировал C # с C ++, JavaScript и Scala. Даже если функция - хорошая вещь, это не обязательно означает, что она подходит.\n\nЯ лично предпочитаю подход таких языков, как Go, Elm и Elixir, которые медленнее добавляют функции и вместо этого сосредотачиваются на простоте. Go, например, не пытается быть лучшим системным языком И лучшим языком пользовательского интерфейса. Вяз не фокусируется ни на чем, кроме веб-приложений. Мне очень нравится эта концепция. Вместо того, чтобы тратить время на выбор одной из многих структур, шаблонов проектирования, линтеров или форматеров, я могу сосредоточиться на способе решения проблемы.\n\nНа мой вопрос ... Где Котлин вписывается в этот спектр? Я слышал много хорошего о языке. JetBrains сосредотачивается на «добавлении замечательных новых функций» или «тщательной разработке языка на долгосрочную перспективу?»\n\nЯ вижу JetBrains, описывающие язык как «лаконичный» (что-то, что мне нравится) и «[Сохраняя современный язык] <span translate =\" no \"> (https://kotlinlang.org/docs/reference/evolution/kotlin-evolution. html) </ span> \"(хорошо, если поддерживать его в актуальном состоянии, не значит принимать каждую новую / популярную концепцию).","title":"Насколько консервативен или прогрессивен языковый дизайн Котлина?","subreddit_name_prefixed":"r/Kotlin","ups":24,"created":1574559628,"link_flair_background_color":"","id":"e0l5hx","author":{"name":"euphbriggs"},"permalink":"/r/Kotlin/comments/e0l5hx/how_conservative_or_progressive_is_kotlins/","url":"https://www.reddit.com/r/Kotlin/comments/e0l5hx/how_conservative_or_progressive_is_kotlins/","created_utc":1574530828}