{"subreddit":{"display_name":"Kotlin"},"subreddit_loc":"Котлин","selftext":"Привет,\n\nПросто хотел поговорить с вами, ребята, об использовании @ Id, @ GeneratedValue из JPA на языке котлин.\n \nКогда вы, ребята, используете id в kotlin, вы используете val или var. Также вы используете nullable?\n\nС моей точки зрения, не имеет смысла обнулять это поле. Когда я выбираю данные из базы данных, не имеет смысла, что идентификатор равен нулю. Так почему бы кому-то захотеть использовать его с безопасным оператором? Null имеет смысл только в том случае, если мне нужно как-то сообщить фреймворку, что это поле сгенерировано, но я также могу сказать об этом фреймворку другим способом.\nНапример, может быть значение по умолчанию 0. И это для каркасов jpa означает, что оно сгенерировано. Но мой коллега пытается сказать мне, что в db можно сохранить также id с 0. Он не ошибается, но и зачем из-за этого крайнего случая использовать обнуляемое поле? Лучше настроить таблицу с идентификатором, начинающимся с 1. Или, возможно, инфраструктура JPA может обрабатывать значение по умолчанию -1 так же, как 0, чтобы она генерировала его.\nА как насчет val против var. Вы волшебно, что jpa переопределяет значение val, но также изменяемый идентификатор не имеет смысла.\n\nТакже отображение от сущности к дто - боль. Потому что в бизнес-логике вы хотите, чтобы ваша бизнес-модель была неизменной с полями, что не допускает обнуления, если нет смысла иметь их нулевыми в любой точке приложения.\n\nЯ прочитал много статей, но мне нужно знать, как вы используете это в компании, где вы работаете, ребята, и ваше мнение.\n\nСпасибо","title":"Котлин П.С.Д.","subreddit_name_prefixed":"r/Kotlin","ups":22,"created":1563654480,"link_flair_background_color":"","id":"cfla94","author":{"name":"arcuk99"},"permalink":"/r/Kotlin/comments/cfla94/kotlin_jpa/","url":"https://www.reddit.com/r/Kotlin/comments/cfla94/kotlin_jpa/","created_utc":1563625680}