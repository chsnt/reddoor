{"subreddit":{"display_name":"Kotlin"},"subreddit_loc":"Котлин","selftext":"Здравствуйте все!\nНасколько я знаю, инкапсуляция - это механизм, когда вы создаете недоступные свойства в своем классе, устанавливая их с помощью модификатора Private, а затем вы создаете свои собственные методы или функции Public, чтобы получить доступ к ним. Кроме того, многие люди в этом случае используют геттеры и сеттеры, но вы можете создавать свои собственные методы и называть их так, как хотите, потому что мы создаем их просто для манипулирования этими частными свойствами.\nХорошо, теперь скажи мне, если я не прав.\nСледовательно, как насчет котлина? Я предполагаю, что мы можем создать свойство внутри класса и пометить как Private, затем мы можем создать наши методы или функции, или вы можете просто установить Private setter для этого свойства, так? Тем не менее, как насчет классов данных в Kotlin? Да, мы можем установить свойства как Private, но не являются ли они механизмом инкапсуляции по умолчанию?","title":"Инкапсуляция в Котлине?","subreddit_name_prefixed":"r/Kotlin","ups":14,"created":1568165469,"link_flair_background_color":"","id":"d2b2do","author":{"name":"Danil_Ochagov"},"permalink":"/r/Kotlin/comments/d2b2do/encapsulation_in_kotlin/","url":"https://www.reddit.com/r/Kotlin/comments/d2b2do/encapsulation_in_kotlin/","created_utc":1568136669}