{"subreddit":{"display_name":"Kotlin"},"subreddit_loc":"Котлин","selftext":"Я читал пост Романа Елизарова [Блокировка потоков, приостановка сопрограмм]  (https://medium.com/@elizarov/blocking-threads-suspending-coroutines-d33e11bf4761) , и что меня удивило ... когда я должен использовать `withContext (Dispatchers.IO)`? Я знаю, что в посте есть несколько примеров, но я все еще не понимаю, проверьте этот пример:\n\nfun main (args: Array <String>) {\nval executor = Executors.newFixedThreadPool (1) .asCoroutineDispatcher ()\n\nGlobalScope.launch (исполнитель) {\nwhile (true) {\nval block = readLine ()\nprintln («Использование потока $ {Thread.currentThread ()}»)\n}\n}\n\nGlobalScope.launch (исполнитель) {\nwhile (true) {\nprintln (\"Hello World! $ {Thread.currentThread ()}\")\nЗадержка (2500)\n}\n}\n\nthread {while (true) {}}\n}\n\nЭто вызовет проблемы, `readLine ()` блокирует единственный поток, поэтому `Hello World!` Никогда не будет отображаться в консоли, это можно исправить, изменив контекст.\n\nfun main (args: Array <String>) {\nval executor = Executors.newFixedThreadPool (1) .asCoroutineDispatcher ()\n\nGlobalScope.launch (исполнитель) {\nwhile (true) {\nwithContext (Dispatchers.IO) {\nval block = readLine ()\nprintln («Использование потока $ {Thread.currentThread ()}»)\n}\n}\n}\n\nGlobalScope.launch (исполнитель) {\nwhile (true) {\nprintln (\"Hello World! $ {Thread.currentThread ()}\")\nЗадержка (2500)\n}\n}\n\nthread {while (true) {}}\n}\n\nЭто работает отлично, теперь `Hello World!` Будет отображаться в консоли каждые 2,5 секунды, и запись чего-либо в консоли покажет, какой поток он использует, сладкий!\n\nПривет мир! Тема [бассейн-1-нить-1,5, главный]\nПривет мир! Тема [бассейн-1-нить-1,5, главный]\n\nИспользование потока Thread [CoroutineScheduler-worker-1,5, main]\nd\nИспользование потока Thread [CoroutineScheduler-worker-2,5, main]\nПривет мир! Тема [бассейн-1-нить-1,5, главный]\n\nОднако ... давайте вернемся к исходному «сломанному» примеру и изменим `newFixedThreadPool` с` 1` на `2` ... и теперь он будет работать нормально, как и« фиксированный »код ... и это почему это меня смущает.\n\nЕсть ли разница между увеличением числа пулов потоков для сопрограмм или использованием `withContext (Dispatchers.IO)`? Я попытался просмотреть исходный код Kotlin 'Coroutines, но не смог найти точного ответа, что «да, Dispatchers.IO - это еще один пул потоков, нет никакой разницы между использованием вашего собственного пула потоков или использованием` Dispatchers.IO ». `»\n\nЕще один пример: я читаю содержимое из URL, это блокирующая операция (ожидание, пока веб-сервер не ответит чем-то) ... Я могу использовать `withContext (Dispatchers.IO)` ... но я также могу использовать ` GlobalScope.async (myExecutorHere) `, в чем разница и есть ли какое-то преимущество между ними?","title":"Когда я должен использовать (и как это работает) «withContext (Dispatchers.IO)»?","subreddit_name_prefixed":"r/Kotlin","ups":7,"created":1543613766,"link_flair_background_color":"","id":"a1sh5u","author":{"name":"MrPowerGamerBR"},"permalink":"/r/Kotlin/comments/a1sh5u/when_should_i_use_and_how_it_works/","url":"https://www.reddit.com/r/Kotlin/comments/a1sh5u/when_should_i_use_and_how_it_works/","created_utc":1543584966}