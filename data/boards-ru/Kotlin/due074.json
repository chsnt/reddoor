{"subreddit":{"display_name":"Kotlin"},"subreddit_loc":"Kotlin","selftext":"","title":"Kotlin overtook Scala according to Google Trends","subreddit_name_prefixed":"r/Kotlin","ups":106,"created":1573434180,"link_flair_background_color":"","id":"due074","author":{"name":"Determinant"},"permalink":"/r/Kotlin/comments/due074/kotlin_overtook_scala_according_to_google_trends/","url":"https://trends.google.com/trends/explore?date=today%205-y&q=%2Fm%2F0_lcrx4,%2Fm%2F091hdj","created_utc":1573405380,"replies":[{"ups":25,"link_id":"t3_due074","replies":[{"ups":6,"link_id":"t3_due074","id":"f74wp34","author":"monkjack","parent_id":"t1_f74uiy9","subreddit_id":"t5_2so2r","body":"You can use gradle fine with scala. I do. The one thing it lacks is the ability to cross publish libraries. But unless you're a library author it doesn't matter.","body_html":"<div class=\"md\"><p> Вы можете использовать Gradle отлично с Scala. Я делаю. Единственное, чего ему не хватает, - это возможность перекрестной публикации библиотек. Но если вы не автор библиотеки, это не имеет значения. </p></div>","permalink":"/r/Kotlin/comments/due074/kotlin_overtook_scala_according_to_google_trends/f74wp34/","name":"t1_f74wp34","created":1573437870,"created_utc":1573409070,"subreddit_name_prefixed":"r/Kotlin","depth":2}],"id":"f74rfzx","author":"bdavisx","parent_id":"t3_due074","subreddit_id":"t5_2so2r","body":"I like Scala but the shit show community (not everyone obviously) around the language drives people away.","body_html":"<div class=\"md\"><p> Мне нравится Scala, но сообщество дерьмовых шоу (очевидно, не все) вокруг языка отталкивает людей. </p></div>","permalink":"/r/Kotlin/comments/due074/kotlin_overtook_scala_according_to_google_trends/f74rfzx/","name":"t1_f74rfzx","created":1573435617,"created_utc":1573406817,"subreddit_name_prefixed":"r/Kotlin","depth":0},{"ups":9,"link_id":"t3_due074","id":"f776wml","author":"neofreeman","parent_id":"t3_due074","subreddit_id":"t5_2so2r","body":"Have used Kotlin for backend service. It’s better than writing code in Java. Specially with Coroutines I will never go back to writing callback spaghetti. \n\nIt’s amazing how simple ideas are taking decades to get implemented in Java, and have been overwhelming in Scala, then a language comes out of no where and implements them right.","body_html":"<div class=\"md\"><p> Использовали Kotlin для бэкэнда. Это лучше, чем писать код на Java. Специально с Coroutines я никогда не вернусь к написанию обратных спагетти. </p><p> Удивительно, как простые идеи занимают десятилетия, чтобы быть реализованными в Java, и были подавляющими в Scala, тогда язык появляется из ниоткуда и реализует их правильно. </p></div>","permalink":"/r/Kotlin/comments/due074/kotlin_overtook_scala_according_to_google_trends/f776wml/","name":"t1_f776wml","created":1573474490,"created_utc":1573445690,"subreddit_name_prefixed":"r/Kotlin","depth":0},{"ups":5,"link_id":"t3_due074","replies":[{"ups":8,"link_id":"t3_due074","id":"f76iqey","author":"BearSnack_jda","parent_id":"t1_f75pgiw","subreddit_id":"t5_2so2r","body":">The PYPL PopularitY of Programming Language Index is created by analyzing how often language tutorials are searched on Google.\n\nIt's useful to know what languages new programmers are interested in learning or have heard about before. That's it. It doesn't claim to be more or less useful than that.","body_html":"<div class=\"md\"><blockquote><p> Индекс популярности языка программирования PYPL создается путем анализа частоты поиска учебных пособий по языку в Google. </p></blockquote><p> Полезно знать, на каких языках новые программисты заинтересованы в изучении или о которых слышали раньше. Вот и все. Он не претендует на то, чтобы быть более или менее полезным, чем это. </p></div>","permalink":"/r/Kotlin/comments/due074/kotlin_overtook_scala_according_to_google_trends/f76iqey/","name":"t1_f76iqey","created":1573457302,"created_utc":1573428502,"subreddit_name_prefixed":"r/Kotlin","depth":2}],"id":"f74nux3","author":"Determinant","parent_id":"t3_due074","subreddit_id":"t5_2so2r","body":"PYPL paints a similar picture:  \n[http://pypl.github.io/PYPL.html](http://pypl.github.io/PYPL.html)","body_html":"<div class=\"md\"><p> PYPL рисует похожую картину: <br/> <a href=\"http://pypl.github.io/PYPL.html\">http://pypl.github.io/PYPL.html</a> </p></div>","permalink":"/r/Kotlin/comments/due074/kotlin_overtook_scala_according_to_google_trends/f74nux3/","name":"t1_f74nux3","created":1573434245,"created_utc":1573405445,"subreddit_name_prefixed":"r/Kotlin","depth":0},{"ups":4,"link_id":"t3_due074","id":"f77wa1d","author":"adamos954","parent_id":"t3_due074","subreddit_id":"t5_2so2r","body":"I may be biased cause I write Scala at work and read stuff made by community. IMHO Scala community became a joke. Loud community praising pure FP and wanting it to be Haskell, it is like a circle-jerk. It's hard to get into the crowd or have a different opinion. Scala 3 is still in WIP, changes are still imposed and we are nowhere near the release. I prefer Kotlin community and stuff people create. It's more pragmatic, far less pure-FP-centric plus Java interop just works. You can write Android, server backend and frontend in one language. Also JVM development greatly sped up and Scala is not really catching up.","body_html":"<div class=\"md\"><p> Я могу быть предвзятым, потому что я пишу Scala на работе и читаю материалы, сделанные сообществом. ИМХО сообщество Scala стало шуткой. Громкое сообщество, восхваляющее чистый FP и желающее, чтобы это был Haskell, это похоже на круговорот. Трудно попасть в толпу или иметь другое мнение. Scala 3 все еще в WIP, изменения все еще наложены, и мы не приближаемся к релизу. Я предпочитаю сообщество Kotlin и вещи, которые люди создают. Это более прагматичный, гораздо менее чистый FP-ориентированный плюс Java-взаимодействие просто работает. Вы можете написать Android, серверную часть и интерфейс на одном языке. Также значительно ускорилась разработка JVM, и Scala на самом деле не догоняет. </p></div>","permalink":"/r/Kotlin/comments/due074/kotlin_overtook_scala_according_to_google_trends/f77wa1d/","name":"t1_f77wa1d","created":1573506849,"created_utc":1573478049,"subreddit_name_prefixed":"r/Kotlin","depth":0},{"ups":10,"link_id":"t3_due074","replies":[{"ups":3,"link_id":"t3_due074","replies":[{"ups":1,"link_id":"t3_due074","id":"f79wnmp","author":"pkulak","parent_id":"t1_f78z7yr","subreddit_id":"t5_2so2r","body":"Oh yeah, I know. But having a green thread scheduler built into the VM is always better.","body_html":"<div class=\"md\"><p> О да, я знаю. Но встроенный в VM планировщик зеленых потоков всегда лучше. </p></div>","permalink":"/r/Kotlin/comments/due074/kotlin_overtook_scala_according_to_google_trends/f79wnmp/","name":"t1_f79wnmp","created":1573545242,"created_utc":1573516442,"subreddit_name_prefixed":"r/Kotlin","depth":4}],"id":"f788l99","author":"pkulak","parent_id":"t1_f77u4pu","subreddit_id":"t5_2so2r","body":"Go is great for highly concurrent network programming. Probably the best for that, actually. But that's a pretty small niche.","body_html":"<div class=\"md\"><p> Go отлично подходит для одновременного сетевого программирования. Наверное, лучшее для этого, на самом деле. Но это довольно маленькая ниша. </p></div>","permalink":"/r/Kotlin/comments/due074/kotlin_overtook_scala_according_to_google_trends/f788l99/","name":"t1_f788l99","created":1573516713,"created_utc":1573487913,"subreddit_name_prefixed":"r/Kotlin","depth":2}],"id":"f74yd6r","author":"SuperFluffyPunch","parent_id":"t3_due074","subreddit_id":"t5_2so2r","body":"Well this is good news. I was always under the impression that Kotlin's popularity has plateaued. I started learning Go last week. Guess I should come back to Kotlin now...","body_html":"<div class=\"md\"><p> Ну, это хорошие новости. У меня всегда было впечатление, что популярность Котлина пошла на убыль. Я начал изучать Go на прошлой неделе. Думаю, я должен вернуться в Котлин сейчас ... </p></div>","permalink":"/r/Kotlin/comments/due074/kotlin_overtook_scala_according_to_google_trends/f74yd6r/","name":"t1_f74yd6r","created":1573438543,"created_utc":1573409743,"subreddit_name_prefixed":"r/Kotlin","depth":0},{"ups":2,"link_id":"t3_due074","id":"f783xq1","author":"Hall_of_Famer","parent_id":"t3_due074","subreddit_id":"t5_2so2r","body":"I think Kotlin already more popular than Scala quite a while ago, ever since Kotlin was officially supported in Android development.","body_html":"<div class=\"md\"><p> Я думаю, что Kotlin уже более популярен, чем Scala, довольно давно, с тех пор, как Kotlin была официально поддержана в разработке Android. </p></div>","permalink":"/r/Kotlin/comments/due074/kotlin_overtook_scala_according_to_google_trends/f783xq1/","name":"t1_f783xq1","created":1573513392,"created_utc":1573484592,"subreddit_name_prefixed":"r/Kotlin","depth":0},{"ups":2,"link_id":"t3_due074","id":"f7ge6hu","author":"lordmyd","parent_id":"t3_due074","subreddit_id":"t5_2so2r","body":"To make this an apples to apples comparison you would have to factor-out Kotlin's usage on Android since Scala doesn't really have a presence on Android. Non-Android Kotlin adoption is still very weak and a lot weaker than Scala's.","body_html":"<div class=\"md\"><p> Чтобы сделать это сравнение яблок с яблоками, вы должны учитывать использование Kotlin на Android, поскольку Scala на самом деле не присутствует на Android. Принятие Kotlin без Android все еще очень слабое и намного слабее, чем у Scala. </p></div>","permalink":"/r/Kotlin/comments/due074/kotlin_overtook_scala_according_to_google_trends/f7ge6hu/","name":"t1_f7ge6hu","created":1573730197,"created_utc":1573701397,"subreddit_name_prefixed":"r/Kotlin","depth":0},{"ups":-1,"link_id":"t3_due074","id":"f78ekb9","author":"hit_dragon","parent_id":"t3_due074","subreddit_id":"t5_2so2r","body":"Kotlin comparing to Scala has better Java integration. Scala has mor generic integration features such as implict, but deos not make sense if you want use Java ecosystem. For LLVM Scala could be good option because of this. \n\nAnyway in Java world I think I would choose Java for backbone and Groovy for scripting. Groovy is dynamic language with optional static typing and Kotlin seems to pretend better Java, but this is not the case. What is missed with Java is scripting.","body_html":"<div class=\"md\"><p> Kotlin по сравнению со Scala имеет лучшую интеграцию с Java. Scala имеет более универсальные интеграционные функции, такие как implict, но не имеет смысла, если вы хотите использовать экосистему Java. Для LLVM Scala может быть хорошим вариантом из-за этого. </p><p> В любом случае, в мире Java я бы выбрал Java для магистрали и Groovy для сценариев. Groovy - это динамический язык с необязательной статической типизацией, и Kotlin, кажется, притворяется лучше Java, но это не так. Что пропущено в Java, так это скриптинг. </p></div>","permalink":"/r/Kotlin/comments/due074/kotlin_overtook_scala_according_to_google_trends/f78ekb9/","name":"t1_f78ekb9","created":1573520534,"created_utc":1573491734,"subreddit_name_prefixed":"r/Kotlin","depth":0},{"ups":-14,"link_id":"t3_due074","id":"f760ooz","author":"Pakistani_Atheist","parent_id":"t3_due074","subreddit_id":"t5_2so2r","body":"Interestingly, Muslim countries prefer Kotlin. /jk","body_html":"<div class=\"md\"><p> Интересно, что мусульманские страны предпочитают Котлин. / Ю.К. </p></div>","permalink":"/r/Kotlin/comments/due074/kotlin_overtook_scala_according_to_google_trends/f760ooz/","name":"t1_f760ooz","created":1573450210,"created_utc":1573421410,"subreddit_name_prefixed":"r/Kotlin","depth":0}]}