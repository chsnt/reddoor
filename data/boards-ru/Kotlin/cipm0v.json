{"subreddit":{"display_name":"Kotlin"},"subreddit_loc":"Котлин","selftext":"Я работаю над приложением, в котором я использую «когда» для просмотра списка условий. Они не являются исчерпывающими, и поэтому есть еще «еще».\n\nСамые дорогие проверки - это нижняя часть, с более легкими и быстрыми проверками вверху с надеждой, что если пользователь достигнет условия, они замыкаются наверху.\n\nВ моих тестах, похоже, когда оценивает сверху вниз. Краткий образец:\n\n    fun main (args: Array <String>) {\n        когда {\n            checkPrint (0) -> doNothing ()\n            checkPrint (1) -> doNothing ()\n            checkPrint (2) -> doNothing ()\n            checkPrint (3) -> doNothing ()\n            checkPrint (4) -> doNothing ()\n            checkPrint (5) -> doNothing ()\n            еще -> ничего не делать ()\n        }\n    }\n\n    fun checkPrint (num: Int): Boolean {\n        Println (NUM)\n        if (num == 5) {\n            вернуть истину\n        }\n        вернуть ложь\n    }\n\n    fun doNothing () {}\n\n\n\nВ этом случае случается распечатать:\n\n    0\n    1\n    2\n    3\n    4\n    5\n\nИзмените условное выражение для проверки на 3, и оно выводит только 0, 1, 2, 3\n\nМой вопрос - я делаю ставку на детали реализации (так происходит) или на гарантию? Я не хочу обновлять релизы Kotlin за один день, чтобы увидеть резкое замедление для пользователей из-за этого. Я не смог найти документы, которые описывают это поведение.\n\n----\n\nБлагодаря knaekce - как-то я пропустил в документах, это гарантированно будет последовательным.","title":"когда - порядок оценки филиала детали реализации или гарантии?","subreddit_name_prefixed":"r/Kotlin","ups":6,"created":1564304778,"link_flair_background_color":"","id":"cipm0v","author":{"name":"darrieng"},"permalink":"/r/Kotlin/comments/cipm0v/when_order_of_branch_evaluation_an_implementation/","url":"https://www.reddit.com/r/Kotlin/comments/cipm0v/when_order_of_branch_evaluation_an_implementation/","created_utc":1564275978}