{"subreddit":{"display_name":"Kotlin"},"subreddit_loc":"Котлин","selftext":"[Ссылка на GitHub]  (https://github.com/mhashim6/klox) \n\nЯ попытался использовать функциональный Kotlin в этом проекте, но (к сожалению) я даже близко не подошел к принципам чистого функционального программирования.\n\nДело в том, что изменяемое глобальное состояние, плавающее вокруг каждого прохода в компиляторе, крайне неудобно для поддержки / отладки.\n\nВ ветке `broken_immutable_state` вы найдете мою * очевидно сломанную * попытку неизменного состояния с реализацией Kotlin [постоянных структур данных] <span translate =\" no \"> (https://github.com/Kotlin/kotlinx. collections.immutable) </ SPAN>.\n\nНо без неявной поддержки параметров это было действительно больно реализовать.\n\nТем не менее, я не полностью разочаровался в FP с Kotlin; Lexer, Parser, Resolver и Interpreter - все функции. Рекурсия и сопоставление с образцом * (ограничено поддержкой Котлина) * * интенсивно используются, и я планирую реорганизовать весь проект, чтобы сделать его максимально функциональным.\n\nЯ действительно подумывал об использовании [ΛRROW]  (https://arrow-kt.io/) , но пока мне кажется, что это язык внутри языка. Возможно, Котлин еще не готов стать чисто функциональным языком * (сам по себе) *?\n\n* ролл-флеш музыка *","title":"Я закончил мой переводчик Kotlin для Lox PL","subreddit_name_prefixed":"r/Kotlin","ups":9,"created":1556561841,"link_flair_background_color":"","id":"bintti","author":{"name":"6UpsideDownTrees"},"permalink":"/r/Kotlin/comments/bintti/ive_finished_my_kotlin_interpreter_for_the_lox_pl/","url":"https://www.reddit.com/r/Kotlin/comments/bintti/ive_finished_my_kotlin_interpreter_for_the_lox_pl/","created_utc":1556533041}