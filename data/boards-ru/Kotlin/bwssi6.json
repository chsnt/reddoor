{"subreddit":{"display_name":"Kotlin"},"subreddit_loc":"Котлин","selftext":"Недавно я просматривал определение языка Swift, и нельзя не заметить сходства между Kotlin и Swift. Особенностью Swift, которая кажется очень полезной или, по крайней мере, гораздо более лаконичной, чем Java и Kotlin, является импорт модулей:\n\n\n\nимпортировать MyKit // возможно MyKitKt на уровне верхнего уровня (юк) ??? импорт \\ *\n\n\n\n\n\nЭта функция значительно упростила бы упаковку и использование сторонних библиотек Kotlin и, возможно, стандартных библиотек, хотя импорт стандартных библиотек уровня платформы и расширений по умолчанию существует, не всегда понятно, как они разрешаются, в какой области они находятся, где они находятся (если вы не вернетесь к реализации через IDE)\n\n\n\nОпределение языка Swift относится к конфликтам имен, но Kotlin уже импортировал X как Y. Я могу представить несколько сценариев, в которых модули могут очищать / очищать мультиплатформенные проекты (особенно в отношении ожидаемой / фактической реализации).\n\n\n\nЯ хорошо знаком со спецификацией модуля Java 9 [https://jcp.org/en/jsr/detail?id=376] (https://jcp.org/en/jsr/ detail? id = 376)  но на самом деле это не то, что облегчает жизнь разработчикам ;-) Кажется, что модульная система в Java 9 была настолько сложной и чуждой, что почти все ее игнорировали или делали вид, что это не так. не существует ...\n\n\n\nЯ делаю большую часть моего внешнего кода в ReactJS, а в TypeScript. Я неравнодушен и доволен модулями, «экспортирующими» их реализацию, в то время как детали остаются «внутренними».\n\n\n\nМысли?","title":"Котлин Модули? Модули Java9? + Swift как импорт","subreddit_name_prefixed":"r/Kotlin","ups":5,"created":1559704860,"link_flair_background_color":"","id":"bwssi6","author":{"name":"Dean_S_Jones"},"permalink":"/r/Kotlin/comments/bwssi6/kotlin_modules_java9_modules_swift_like_imports/","url":"https://www.reddit.com/r/Kotlin/comments/bwssi6/kotlin_modules_java9_modules_swift_like_imports/","created_utc":1559676060}