{"subreddit":{"display_name":"Kotlin"},"subreddit_loc":"Котлин","selftext":"Я ищу мнения о некоторых функциональных возможностях, которые, по моему мнению, должны существовать в Kotlin.\n\nСегодня столкнулся со сценарием, в котором я хотел предоставить обнуляемый тип функции с необнуляемым аргументом со значением по умолчанию. Я думаю, что это должно быть возможно обойтись без явной проверки на нулевые значения / написать некоторый поток управления для каждого случая\n\nНадеюсь, приведенный ниже пример демонстрирует, что я имею в виду:\n\n    fun someFunction (x: Long = 1) {\n        // Сделай что-нибудь\n    }\n    \n    fun someOtherFunction (y: Long?): {\n        someFunction (y) // Попытка 1: ошибка «Обязательный: длинный \\ n Найдено: длинный?»\n        someFunction (x = y) // Попытка 2: то же\n    }\n\nСчитаете ли вы, что это должно быть возможно (или знаете, как это сделать)?","title":"Предоставление значения NULL в качестве аргумента для ненулевого параметра со значением по умолчанию","subreddit_name_prefixed":"r/Kotlin","ups":6,"created":1547159856,"link_flair_background_color":"","id":"aejoo9","author":{"name":"TheEndian"},"permalink":"/r/Kotlin/comments/aejoo9/providing_null_as_the_argument_to_a_nonnullable/","url":"https://www.reddit.com/r/Kotlin/comments/aejoo9/providing_null_as_the_argument_to_a_nonnullable/","created_utc":1547131056}