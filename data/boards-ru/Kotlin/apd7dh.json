{"subreddit":{"display_name":"Kotlin"},"subreddit_loc":"Котлин","selftext":"Помимо нескольких исправлений ошибок [эта версия]  (https://github.com/mockk/mockk/releases/tag/1.9.1)  предоставляет нам две интересные функции:\n\n[Иерархическая насмешка]  (https://github.com/mockk/mockk/blob/master/README.md#hierarchical-mocking) \n\n    интерфейс AddressBook {\n        val контакты: Список <Контакт>\n    }\n    \n    интерфейс\n        Валь имя: Строка\n        Валь телефон: Строка\n        Вал адрес: адрес\n    }\n    \n    Адрес интерфейса {\n        Валь город: Стринг\n        val zip: String\n    }\n    \n    val addressBook = mockk <AddressBook> {\n        каждые {контакты} возвращает listOf (\n            mockk {\n                каждый {имя} возвращает \"Джон\"\n                каждый {телефон} возвращает \"123-456-789\"\n                каждый {address.city} возвращает \"Нью-Йорк\"\n                каждый {address.zip} возвращает \"123-45\"\n            },\n            mockk {\n                каждый {имя} возвращает \"Алекс\"\n                каждый {телефон} возвращает \"789-456-123\"\n                каждый {адрес} возвращает макет {\n                    каждый {город} возвращает \"Вроцлав\"\n                    каждый {zip} возвращает \"543-21\"\n                }\n            }\n        )\n    }\n\nЛучше [поддержка vararg]  (https://github.com/mockk/mockk/blob/master/README.md#varargs) :\n\n        интерфейс ClsWithManyMany {\n            fun manyMany (vararg x: Any): Int\n        }\n    \n        val obj = mockk <ClsWithManyMany> ()\n    \n        каждый {obj.manyMany (5, 6, * varargAll {it == 7})} возвращает 3\n    \n        println (obj.manyMany (5, 6, 7)) // 3\n        println (obj.manyMany (5, 6, 7, 7)) // 3\n        println (obj.manyMany (5, 6, 7, 7, 7)) // 3\n    \n        каждый {obj.manyMany (5, 6, * anyVararg (), 7)} возвращает 4\n    \n        println (obj.manyMany (5, 6, 1, 7)) // 4\n        println (obj.manyMany (5, 6, 2, 3, 7)) // 4\n        println (obj.manyMany (5, 6, 4, 5, 6, 7)) // 4\n    \n        каждый {obj.manyMany (5, 6, * varargAny {nArgs> 5}, 7)} возвращает 5\n    \n        println (obj.manyMany (5, 6, 4, 5, 6, 7)) // 5\n        println (obj.manyMany (5, 6, 4, 5, 6, 7, 7)) // 5\n    \n        каждый {\n            obj.manyMany (5, 6, * varargAny {\n                if (позиция <3) это == 3, иначе это == 4\n            } 7)\n        } возвращает 6\n        \n        println (obj.manyMany (5, 6, 3, 4, 7)) // 6\n        println (obj.manyMany (5, 6, 3, 4, 4, 7)) // 6","title":"MockK 1.9.1, иерархический макет и лучшая обработка vararg","subreddit_name_prefixed":"r/Kotlin","ups":15,"created":1549893234,"link_flair_background_color":"","id":"apd7dh","author":{"name":"oleksiyp"},"permalink":"/r/Kotlin/comments/apd7dh/mockk_191_hierarchical_mocking_better_vararg/","url":"https://www.reddit.com/r/Kotlin/comments/apd7dh/mockk_191_hierarchical_mocking_better_vararg/","created_utc":1549864434}