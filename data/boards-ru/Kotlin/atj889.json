{"subreddit":{"display_name":"Kotlin"},"subreddit_loc":"Котлин","selftext":"Эй, я хочу спросить, если это хорошая идея.\n\n    \n    // но представьте, что в интерфейсе около 100 методов, из которых 5-6 похожи на последнее отображение\n    // и код, подобный этому, часто присутствует в кодовой базе, существует более 100 интерфейсов методов\n    // это огромная кодовая база, и я и моя команда начали работать над\n    интерфейс LikeItIsInCodeNow {\n        fun doSomethingWithStrings (arr: Array <String>)\n        fun doSomethingWithInts (arr: Array <Int>)\n        fun doSomethingWithDoubles (arr: Array <Double>)\n    \n        fun mapFromStringToDouble (arr: Array <String>): Array <Double>\n    }\n    \n    class SomeClassLikeItIsInCodeNow {\n        fun doSomethingWithStrings (arr: Array <String>) {}\n        fun doSomethingWithInts (arr: Array <Int>) {}\n        fun doSomethingWithDoubles (arr: Array <Double>) {}\n    \n        fun doSomething (arr: Array <Double>) {}\n    }\n    \n    Класс PresenterLikeItIsInCodeNow (private val someClass: SomeClassLikeItIsInCodeNow): LikeItIsInCodeNow {\n    \n        // в основном делегирование\n        переопределить веселье doSomethingWithStrings (arr: Array <String>) {\n            someClass.doSomethingWithStrings (обр)\n        }\n    \n        переопределить веселье doSomethingWithInts (arr: Array <Int>) {\n            someClass.doSomethingWithInts (обр)\n        }\n    \n        переопределить веселье doSomethingWithDoubles (arr: Array <Double>) {\n            someClass.doSomethingWithDoubles (обр)\n        }\n        // конец делегирования\n    \n        // это какой-то длинный метод, который также вызывает ~ 5 разных методов\n        переопределить забавный mapFromStringToDouble (arr: Array <String>): Array <Double> {\n            val doubles = arr.map {it.length.toDouble ()} .toTypedArray ()\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            someClass.doSomething (парный)\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            возврат удваивается\n        }\n    }\n    \n    // что я думаю сделать с этим, чтобы удалить повторение, но я не знаю, если это хорошая идея\n    \n    \n    // Мне нравится эта идея, потому что\n    интерфейс BaseMethods {\n        fun doSomethingWithStrings (arr: Array <String>)\n        fun doSomethingWithInts (arr: Array <Int>)\n        fun doSomethingWithDoubles (arr: Array <Double>)\n    }\n    \n    интерфейс RestOfMethods {\n        fun mapFromStringToDouble (arr: Array <String>): Array <Double>\n    }\n    \n    class SomeClass: BaseMethods {\n        переопределить веселье doSomethingWithStrings (arr: Array <String>) {}\n        переопределить веселье doSomethingWithInts (arr: Array <Int>) {}\n        переопределить веселье doSomethingWithDoubles (arr: Array <Double>) {}\n    \n        fun doSomething (arr: Array <Double>) {}\n    }\n    \n    Класс Presneter (val someClass: SomeClass): BaseMethods by someClass, RestOfMethods {\n        переопределить забавный mapFromStringToDouble (arr: Array <String>): Array <Double> {\n            val doubles = arr.map {it.length.toDouble ()} .toTypedArray ()\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            someClass.doSomething (парный)\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            //сделай что-нибудь\n            возврат удваивается\n        }\n    }","title":"Вопрос о Котлинской делегации","subreddit_name_prefixed":"r/Kotlin","ups":3,"created":1550880008,"link_flair_background_color":"","id":"atj889","author":{"name":"Dussimm"},"permalink":"/r/Kotlin/comments/atj889/question_about_kotlin_delegation/","url":"https://www.reddit.com/r/Kotlin/comments/atj889/question_about_kotlin_delegation/","created_utc":1550851208}